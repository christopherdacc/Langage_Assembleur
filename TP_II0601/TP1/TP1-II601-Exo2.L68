00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/10/2024 8:45:21 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Exercice 2
00000000                             3  * Written by : DACCACHE - ERRARD
00000000                             4  * Date       : 06/03/24
00000000                             5  * Description: TP1
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  * Put program code here
00001000                            11  
00001000  =0000000D                 12  CR EQU $0D              *retour chariot (carriage return)
00001000  =0000000A                 13  LF EQU $0A              *Saut de ligne (Line Feed)
00001000                            14  
00001000  43F9 00001074             15  LOOP    LEA MESSAGE1, A1     *chargement de message dans l'adresse de registre A1
00001006  103C 000E                 16          MOVE.B #14,D0        *mettre 14 dans le registre D0
0000100A  4E4F                      17          TRAP #15             *affiche du message1     
0000100C  43F9 0000108C             18          LEA MESSAGE2, A1
00001012  4E4F                      19          TRAP #15             *affichage du messsage2
00001014                            20          
00001014                            21  *--------------------premier entier------------------------        
00001014  103C 0004                 22          MOVE.B #4,D0          *valeur du premier entier
00001018  4E4F                      23          TRAP #15              *affichage
0000101A  1A01                      24          MOVE.B D1,D5          *déplacement de D1 dans D5
0000101C  43F9 000010A8             25          LEA MESSAGE3, A1
00001022  103C 000E                 26          MOVE.B #14,D0         *mettre 14 dans D0
00001026  4E4F                      27          TRAP #15              *affichage du message3
00001028                            28          
00001028                            29  *--------------------deuxième entier------------------------                   
00001028  103C 0004                 30          MOVE.B #4,D0           *valeur du deuxième entier
0000102C  4E4F                      31          TRAP #15               *affichage
0000102E  1C01                      32          MOVE.B D1,D6           *déplacement de D1 dans D6
00001030  D205                      33          ADD.B D5,D1            *somme de D5 et D1
00001032  43F9 000010C7             34          LEA MESSAGE4, A1
00001038  103C 000E                 35          MOVE.B #14,D0          *Mettre 14 dans le registre D0
0000103C  4E4F                      36          TRAP #15               *affichage du message4
0000103E  1E01                      37          MOVE.B D1,D7           *déplacement de D1 dans D7
00001040  1205                      38          MOVE.B D5,D1           *déplacement du premier entier dans D1
00001042  103C 0003                 39          MOVE.B #3,D0           **déplacement de 3 dans D0
00001046  4E4F                      40          TRAP #15               *affichage 
00001048  43F9 000010D4             41          LEA plus, A1           *caractère + dans A1
0000104E  103C 000E                 42          MOVE.B #14, D0         *mettre 14 dans D0
00001052  4E4F                      43          TRAP #15               *affichage du carcatère +
00001054  1206                      44          MOVE.B D6,D1           *déplacement du deuxième entier dans D1
00001056  103C 0003                 45          MOVE.B #3, D0          *déplacement de 3 dans D0
0000105A  4E4F                      46          TRAP #15               *affichage du deuxième entier
0000105C  43F9 000010D8             47          LEA egal, A1           *caractère = dans A1
00001062  103C 000E                 48          MOVE.B #14,D0          *mettre 14 dans  D0
00001066  4E4F                      49          TRAP #15               *affichage du signe =
00001068  1207                      50          MOVE.B D7, D1
0000106A  103C 0003                 51          MOVE.B #3, D0          *déplacement de 3 dans D0
0000106E  4E4F                      52          TRAP #15               *affichage du résultat
00001070                            53          
00001070                            54  
00001070  FFFF FFFF                 55      SIMHALT             ; halt simulator
00001074                            56  
00001074                            57  * Put variables and constants here
00001074= 2D 2D 2D 2D 2D 20 ...     58  MESSAGE1  DC.B '----- TP1 EXO2 ------',CR,LF,0
0000108C= 44 6F 6E 6E 65 72 ...     59  MESSAGE2  DC.B 'Donner le premier entier : ',0
000010A8= 44 6F 6E 6E 65 72 ...     60  MESSAGE3  DC.B 'Donner le deuxième entier : ',0,CR,LF
000010C7= 4C 61 20 73 6F 6D ...     61  MESSAGE4  DC.B 'La somme de ',0
000010D4= 20 2B 20 00               62  plus DC.B ' + ',0
000010D8= 20 3D 20 00               63  egal DC.B ' = ',0
000010DC                            64  
000010DC                            65      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
EGAL                10D8
LF                  A
LOOP                1000
MESSAGE1            1074
MESSAGE2            108C
MESSAGE3            10A8
MESSAGE4            10C7
PLUS                10D4
START               1000
