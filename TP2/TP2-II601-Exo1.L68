00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 3/18/2024 9:48:30 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : TP 2 EXO 1
00000000                             3  * Written by : ERRARD - DACCACHE
00000000                             4  * Date       : 13/03/24
00000000                             5  * Description: TP 2
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                      ; first instruction of program
00001000  =0000000D                  9  CR EQU $0D                  *retour chariot (carriage return)
00001000  =0000000A                 10  LF EQU $0A                  *Saut de ligne (Line Feed)
00001000                            11  * Put program code here
00001000  43F9 0000103C             12          LEA MESSAGE, A1     *chargement de message dans l'adresse de registre A1
00001006  103C 000E                 13          MOVE.B #14,D0       *Mettre 14 dans le registre D0
0000100A  4E4F                      14          TRAP #15            *Affichage de MESSAGE
0000100C  163C 0001                 15          MOVE.B #1, D3       *One met 1 dans le registre de donne D3
00001010                            16  *-----------------------------------------        
00001010  43F9 00001054             17  BOUCLE    LEA MESSAGE2, A1  *chargement de MESSAGE2 dans le registre d'adress A1
00001016  103C 000E                 18            MOVE.B #14,D0     *Mettre 14 dans le registre D0
0000101A  4E4F                      19            TRAP #15          *Affichage de MESSAGE2
0000101C  103C 0003                 20            MOVE.B #3,D0      *on met 3 dans D0
00001020  1203                      21            MOVE.B D3,D1      *on met le contenue de D3 dans D1
00001022  4E4F                      22            TRAP #15          *on afficher le nombre contenu dans D1
00001024  5243                      23            ADD #1,D3         *on ajoute 1 a la valeur contenu dans D3
00001026  B6BC 0000000B             24            CMP.L #11,D3      *on compare 11 a D3
0000102C  6E00 0004                 25            BGT ENDER
00001030  6DDE                      26            BLT BOUCLE
00001032                            27  
00001032  103C 0009                 28  ENDER     MOVE.B #9,D0
00001036  4E4F                      29            TRAP #15          
00001038  FFFF FFFF                 30      SIMHALT             ; halt simulator
0000103C                            31  
0000103C                            32  * Put variables and constants here
0000103C= 2D 2D 2D 2D 2D 20 ...     33  MESSAGE  DC.B '----- TP2 EXO 1 -----',CR,LF,0
00001054= 0D 0A 42 6F 6E 6A ...     34  MESSAGE2 DC.B CR,LF,'Bonjour ',0
0000105F                            35  
0000105F                            36      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BOUCLE              1010
CR                  D
ENDER               1032
LF                  A
MESSAGE             103C
MESSAGE2            1054
START               1000
